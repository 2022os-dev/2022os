[package]
name = "os"
version = "0.1.0"
edition = "2018"

[profile.dev]
opt-level = 3
debug = false
strip = "debuginfo"
overflow-check = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["load_contest_test", "FCFS", "shutdown_when_no_pcb"]
board_unleashed = []    # 使用unleashed开发板
init_clock = ["board_unleashed"]    # 配置系统时钟，使用1G Hz
read_buffer = []    # read调用使用缓存区
input_echo  = []    # 输入回显示
multicore   = []    # 开启多核
batch = []          # 默认会运行一个shell，在shell中输入程序名运行，batch会指定运行一系列特定的程序，方便调试多核(src/user/mod.rs)
FCFS = []           # 优先调度先来的进程，用于gitee调试时查看结果
load_contest_test = []
load_shell = []
shutdown_when_no_pcb = []
memfs = []

# 下面的选项用于调试内核模块的输出
kernel_log = ["pcb", "path_resolve", "pipe", "vfs", "execve", "hart", "sd", "syscall", "scheduler", "kalloc", "vfs", "trap", "vm", "time"] 
print_lock = []   # 使用互斥锁防止多核打印格式混乱
time = []
sd = []
syscall = []
trap = []
scheduler = []
hart = []
pgtbl = []
kalloc = []
pcb = []
signal = []
vfs = []
pipe = []
path_resolve = []
vm = []
execve = []

[dependencies]
riscv = { path = "crates/riscv", features = ["inline-asm"] }
lazy_static = {version = "1.4.0", features = ["spin_no_std"]}
buddy_system_allocator = "0.6"
spin = "0.7.0"
bitflags = "1.2.1"
elf_parser = { version = "0.1.1", path = "crates/elfparser" }
fat32 = { path = "crates/fat32" }
block_device = { version = "0.1", path = "crates/block_device" }
